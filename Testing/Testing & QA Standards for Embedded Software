Testing/QA Standards for Embedded Software

- Testing priorities: Test for most likely errors AND Test for errors with the worst possible consequences. 
- Testing should be designed to be destructive, that is, to prove the program doesn’t work!
- Tests should be thought of as being conducted with an expected result of either a success or a failure.
  * Tests with an expected success are generally ones that are testing for functionality, in as much 
    as ensuring that the unit designed does what it is intended to do. 
  * Tests with an expected failure are generally ones that are testing to ensure that the designed unit 
    properly handles any input that it wasn't designed to receive, handles sub-component failures and 
    alerts the user properly, etc.

Software:
- AVOID the String class as it will lead to excessive dynamic memory allocation, Heap fragmentation, 
  and random / abnormal behavior that is hard to diagnose.
- All code that compiles and is to be either submitted for GitHub commit or used in a hardware 
  testing application is to be ran through CPPCheck, and corrected accordingly. 

- All dev code that is to be used in a hardware testing application is to have its respective 
  microcontroller's SRAM analyzed at each level of "embedded" or sub function that is called. 
  This is currently accomplished using the "MemoryFree-Master" library. This will help to eliminate 
  any memory overflows / stack crashes. A 20% tolerance is to be maintained. If available SRAM 
  goes below this, then memory allocation will be further developed and performance modifications 
  made before proceeding with testing. 
  
- Field test units will have the memoryTest() function placed in them at strategic locations. 
  This allows the testing engineer to get notified of any possible memory leaks in these units. 

- By placing a trace statement, such as a printf( ), at the beginning of every block, you can 
  track when the block—and by implication all the statements in the block—are executed.

- All prinf() calls are to be #define(d) out of (or completely removed from) production code. 

- Main loop() is to be clocked and the time documented after any addition to the code. This is to check 
  the responsiveness to both the boiler and the user. If needed individual function() entry-point and 
  exit-point time measurements can be taken and averaged to determine the time of execution of a 
  particular trouble function. 

Functional Testing “Black Box”: Because black-box tests depend only on the program requirements 
and its I/O behavior, they can be developed as soon as the requirements are complete. This allows 
black-box test cases to be developed in parallel with the rest of the system design.

• Stress tests: Tests that intentionally overload input channels, SD card Module, 
  memory management systems, SIM Module, and so on.
• Boundary value tests: Inputs that represent “boundaries” within a particular range (for example, 
  above the largest and below the smallest integers for an integer input) are to be used. This ensures 
  that exceptions are caught and delt with properly. 
• Exception tests: Tests that should trigger a failure mode or exception mode.
  - SD Module failure to boot.
  - SD .txt file failure to open or be found.
  - SIM module failure to boot.
  - Failure to receive SMS from user. 
  - ModBus read failure.
  - memoryTest() alert for memory leaks.
• Random tests: Generally, the least productive form of testing but still used to evaluate 
  the robustness of code. Input of random values, multiple alarms at the same time etc. 
• Performance tests: Does it do what it is designed to do under normal conditions? 
  - Test ALL alarms to ensure the proper messages gets sent.
  - Access ALL UI screens and sub screens.
  - Access ALL parameters within these screens and sub screens.
  - Ensure ALL default inputs are installed.
  - Inspect data logging to ensure functionality and formatting. 
  - Inspect RTC time initialization. 

Coverage Tests “White box”: Coverage tests are devised with full knowledge of how the software 
is implemented, that is, with permission to “look inside the box.” White-box tests are designed with 
the source code handy.

• Statement coverage: Test cases selected because they execute every statement in the program at least once.
• Decision or branch coverage: Test cases chosen because they cause every
  branch (both the true and false path) to be executed at least once. 
  (often tested during DEV because these require specific conditions to be met.)
• Condition coverage: Test cases chosen to force each condition in a
  decision to take on all possible logic values.
  
=====================================================================================================================
=========================================== Hardware / Field testing:================================================
=====================================================================================================================
- Case Cart squawkbox_v1.0.0 installed SEPT 2022:
   Production code for original in house developed SquawkBox. 
   
   *Current hardware failures: 1. (KPR-SCF-115VACDC-1 contactor) - short discovered in the gasIN contactor. This caused 
                                  the contacts to stay in the open position, which will not cause an alarm SMS to be 
                                  sent. This prevented all Gas pressure alarms. (replaced)
   *Current software failures: 1. (HLPC false alarm messages when PLWCO alarms) DA tank issues cause multiple PLWCO 
                                  alarms in a row which caused false HLPC alarms. The limit circuit on the boiler is 
                                  wired in series and the test board for the squawkBox is wired in parallel. The in-series 
                                  circuit on the boiler means that an open PLWCO relay also cuts power to the HLPC. This
                                  power drop on the HLPC was recognised by the squawk as an alarm intermittently.
                                  CODE FIX: 
                                  if ((hlpcNC == LOW && alarmSwitch4) || **(hlpcCOMMON == HIGH && alarmSwitch4)**)
                                  {
                                      reset all alarm timer variables.
                                  }
                                  This code fix ensures that the HLPC function resets BOTH when power is flowing completely
                                  through the switch and when power drops completely off of the switch. 
   *Software change 1.------------Changed the input PIN to be INPUT_PULLUPS and rewired the contactors in the panel to 
                                  pull the GPIO pins to GND instead of HIGH.
   
   Initial concerns to address:
   - Larger antennas needed. (installed OCT 2022)
   - Need an LED fault indicator on the SquawBox panel for SquawkBox failure recognition. 
=====================================================================================================================
- A1 Cleaners squawkbox-v3.LCD.0 TOBE installed 2022:
   Completely new version. Replaced transformers with contactors, Major software update, added LCD screen,
   customer now has the ability to input their own phone numbers and activate / deactivate them. 
   
   *Current failures: 0.
   
   Initial concerns to address:
   - . 
=====================================================================================================================
- A1 Cleaners A1_V2_0 installed AUG 2021:
   Software update to fix SIM reboot issue from below. 
   
   *Current failures: 0.
   
   Initial concerns to address:
   - SIMBoot() should function automatically upon start-up. 
=====================================================================================================================   
- A1 Cleaners A1_V1_0 installed MAR 2021: 
   Boiler is currently running at a normal boiler operating room temp of >140F for 5 days a week. 
   
   *Current environmental failures: 1. (Teensy 4.1 for monitoring temp / humidity) - unrelated to 
                                       SquawkBox performance. 
   *Current hardware failures: 1. (RS-485 module) - manufacturer defect. 
   *Current software failures: 1. (Heap Fragmentation causing stack crash) - Use of C style strings 
                                  instead of String Class corrected issue. This presented as abnormal / random 
                                  behavior after an undetermined amount of time.
   *Current software failures: 2. (SIM reboot issue) SIM module get power to A3 pin every time the squawk reboots. 
                                  This causes the SIM module to power off if only the Mega resets. This issue will 
                                  lead to an OFF SIM module and currently the Mega has to be either completely 
                                  powered down or reset twice to prevent this. 
   
   Initial concerns to address:
   - Microcontroller input wire shielding (Interference caused by close proximity to 120VAC -> 5VDC transformers)
   - DIN rail mounting method needs to be 3D printed in PETG. 
   - Electrical panel needs to be 2x-3x larger. 
   - Standoffs will be a requirement for mounting panels directly onto a boiler. 
   - Larger / longer antenna needed to help eliminate building 4G LTE interference. 
   - Consider an external Squawk RESET button.
   - Consider using INPUT_PULLUP and pulling contactors to ground instead of using 120VAC transformers to input 5VDC to board. 
========================================================================================================================
- MayDay Brewery breadboard installed AUG 2019 / deprecated NOV 2021:
   Boiler is currently running 5 days a week.
   
   *Current environmental failures: 0. 
   *Current hardware failures: 2. (SIM900 Module) - manufacturer defect. 2G phase out requiring major update.
                                  (SIM7000A 4G Module) - manufacturer defect. Start using DFRobot modules instead. 
   *Current software failures: 2. (HLPC()) - Edit to the logic corrected issue.
                                  (MODBus()) - Edit to the logic corrected issue.
   
   Initial concerns to address:
   - PCB design solution needs to be found. 
   - Additional functionality required to be a final solution.
   - DIN rail mounting solution needs to be found. 
   - Needs a dedicated Electrical panel. 
   - Antenna needed to help eliminate building phone signal interference.
